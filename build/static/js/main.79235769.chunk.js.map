{"version":3,"sources":["components/Navigation.jsx","nbmon3.png","nbmon1.png","nbmon2.png","components/Marketplace.jsx","nbmon-background.png","components/Gallery.jsx","realmhunterlogo.png","App.jsx","reportWebVitals.js","index.js"],"names":["Navigation","useMoralis","Moralis","isAuthenticated","logout","useState","bscBalance","setBscBalance","bscToUsdBalance","setBscToUsdBalance","showLogin","setShowLogin","isLoggedIn","setIsLoggedIn","showPassword","setShowPassword","email","setEmail","loginPassword","setLoginPassword","signUpPassword","setSignUpPassword","showCurEmail","setShowCurEmail","showLoginAlready","setShowLoginAlready","getBSCbalance","a","enableWeb3","web3","abi","PriceGetter","contract","eth","Contract","methods","getLatestPrice","call","BscToUsdData","console","log","getBalance","currentProvider","selectedAddress","balance","balanceDeci","utils","fromWei","toString","substring","authenticateUser","authenticate","loginAddEmail","User","currentAsync","then","user","get","includes","alert","loginWithPassword","logIn","window","location","reload","signUpWithPassword","setUsername","setPassword","save","logUserOut","useEffect","className","href","onClick","value","onChange","event","target","placeholder","TOKEN_CONTRACT_ADDRESS","Marketplace","NBMons","setNBMons","displayNBMons","NBMonCore","Web3","getOwnerNBMonIds","from","dataArray","forEach","dogId","getNBMon","d","nftTokenURI","tokenURI","fetch","response","json","jsonResponse","nftImageURI","image","element","src","name","description","health","stamina","attack","oldArray","mintNBMon","encodedAbiUploadFile","btoa","JSON","stringify","AbiFile","File","base64","contractAbis","Object","set","send","receipt","NBMonId","Gallery","match","NBBackground","NBMon3","combinationStats","type","min","max","App","RealmHunter","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.79235769.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nimport { useEffect, useState } from \"react\";\nimport PriceGetter from \"../contracts/PriceGetter.json\";\nimport Token from \"../contracts/Token.json\"\n\nimport { useMoralis, useNativeBalance } from \"react-moralis\";\n\n\nconst PRICEGETTER_CONTRACT_ADDRESS = \"0xf21F90585fD99281cefdfdb5A3307082FE62E2B7\";\n\n\nexport const Navigation = () : React.ReactElement => {\n\n\n\tconst { Moralis, isAuthenticated, logout } = useMoralis();\n\n\tconst[bscBalance, setBscBalance] = useState();\n\tconst[bscToUsdBalance, setBscToUsdBalance] = useState();\n\tconst[showLogin, setShowLogin] = useState(false);\n\tconst[isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst[showPassword, setShowPassword] = useState(false);\n\n\tconst[email, setEmail] = useState(\"\");\n\tconst[loginPassword, setLoginPassword] = useState(\"\");\n\tconst[signUpPassword, setSignUpPassword] = useState(\"\");\n\n\n\tconst[showCurEmail, setShowCurEmail] = useState(\"\");\n\tconst[showLoginAlready, setShowLoginAlready] = useState(false);\n\n\tconst handleEmailChange = (event) => setEmail(event.target.value);\n\tconst handleLoginPassword = (event) => setLoginPassword(event.target.value);\n\tconst handleSignUpPassword = (event) => setSignUpPassword(event.target.value);\n\n\n\tconst getBSCbalance = async () => {\n\t\tconst web3 = await Moralis.enableWeb3();\n\t\tconst abi = PriceGetter.abi\n\t\tconst contract = new web3.eth.Contract(abi, PRICEGETTER_CONTRACT_ADDRESS);\n\t\tconst BscToUsdData = await contract.methods.getLatestPrice().call() / 100000000;\n\t\tconsole.log(BscToUsdData);\n\n\t\tconst balance = await web3.eth.getBalance(web3.currentProvider.selectedAddress);\n\t\tconst balanceDeci = web3.utils.fromWei(balance);\n\t\tconsole.log(balanceDeci);\n\n\t\tsetBscBalance(balanceDeci.toString().substring(0, 5));\n\t\tsetBscToUsdBalance((balanceDeci * BscToUsdData).toString().substring(0, 5));\n\t};\n\n\tconst authenticateUser = async () => {\n\t\tawait Moralis.authenticate();\n\t\tsetShowLogin(true);\n\t};\n\tconst loginAddEmail = async () => {\n\t\tMoralis.User.currentAsync().then(async function(user){\n\t\t\tsetShowPassword(true);\n\t\t\tconsole.log(user.get(\"username\"));\n\t\t\tif(user.get(\"username\").includes(\"@\")){\n\t\t\t\tif(user.get(\"username\") == email){\n\t\t\t\t\tsetShowLoginAlready(true);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\talert(\"This wallet is already registered on our site. Please use the correct email.\")\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsetShowLoginAlready(false);\n\t\t\t}\n\t\t});\n\t};\n\tconst loginWithPassword = async () => {\n\t\ttry{\n\t\t\tconst user = await Moralis.User.logIn(email, loginPassword);\n\t\t\tconsole.log(\"someshit\"+email+loginPassword);\n\t\t} catch(error){\n\t\t\talert(\"Invalid password\");\n\t\t\tlogout();\n\t\t} finally{\n\t\tsetShowLogin(false);\n\t\tsetIsLoggedIn(true);\n\t\twindow.location.reload();\n\t\t}\n\t};\n\tconst signUpWithPassword = async () => {\n\t\tMoralis.User.currentAsync().then(async function(user){\n\t\t\tuser.setUsername(email);\n\t\t\tuser.setPassword(signUpPassword);\n\t\t\tawait user.save();\n\t\t\tsetShowLogin(false);\n\t\t\tsetIsLoggedIn(true);\n\t\t\twindow.location.reload();\n\t\t});\n\t};\n\tconst logUserOut = async () => {\n\t\tlogout();\n\t\tsetIsLoggedIn(false);\n\t};\n\n\tuseEffect(() => {\n\tif(isAuthenticated || isLoggedIn){\n\tMoralis.User.currentAsync().then(function(user){\n\t  if(user.get(\"username\").includes(\"@\")){\n\t  \tsetIsLoggedIn(true);\n\t\tgetBSCbalance();\n\t\tsetShowCurEmail(user.get(\"username\"));\n\t\t}\n\t  });\n\t}\n\t}, [isAuthenticated, isLoggedIn]);\n\n\n  return (\n    <div className=\"navigation\">\n\t     <ul className=\"nav nav-tabs\">\n\t\t  <li className=\"nav-item navi-left\">\n\t\t    <a className=\"nav-link\" aria-current=\"page\" href=\"/\">Gallery</a>\n\t\t  </li>\n\t\t  <li className=\"nav-item navi-left\">\n\t\t    <a className=\"nav-link\" href=\"/marketplace\">Marketplace</a>\n\t\t  </li>\n\t\t  \n\t\t  {!(isAuthenticated && isLoggedIn) ? \n\t\t  \t<li className=\"nav-item navi-right navi-login\">\n\t\t<button className=\"nav-link\" onClick={authenticateUser}> Authenticate </button>\n\t\t</li>\n\t\t\n\t\t : <div><li className=\"nav-item navi-right navi-login\">\n\t\t\t <button className=\"nav-link\" onClick={logUserOut}>Log Out</button>\n\t\t\n\t\t </li>\n\t\t <span className=\"balance-show\">{showCurEmail} : {bscBalance} BNB ({bscToUsdBalance} USD)</span></div>}\n\n\t\t <li className=\"nav-item navi-right\">\n\t\t    <a className=\"nav-link\" href=\"/contact\">Contact Us</a>\n\t\t  </li>\n\t\t</ul>\n\n\t\t{showLogin ? <div className=\"largelogin\">\n\t\t\t<div className=\"login-block\">\n\t\t\t\t<span className=\"login-title\">Please provide us with your email</span>\n\t\t\t\t<input value={email} onChange={handleEmailChange} placeholder=\"email\" />\n\t\t\t\t<button onClick={loginAddEmail}>Enter your email</button>\n\t\t\t\t{showPassword && <div> {showLoginAlready ? \n\t\t\t\t<div className=\"login-showup\">\n\t\t\t\t\tLog In with your password.\n\t\t\t\t\t<input value={loginPassword} onChange={handleLoginPassword} placeholder=\"password\" />\n\t\t\t\t\t<button onClick={loginWithPassword}>Log In</button>\n\t\t\t\t</div>\n\t\t\t\t\t: \n\t\t\t\t<div className=\"login-showup\">\n\t\t\t\t\tSign Up with new password.\n\t\t\t\t\t<input value={signUpPassword} onChange={handleSignUpPassword} placeholder=\"password\" />\n\t\t\t\t\t<button onClick={signUpWithPassword}>Sign Up</button>\n\t\t\t\t</div>\n\t\t\t\t} </div>}\n\t\t\t</div>\n\t\t</div> : <div></div>}\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/nbmon3.c07aafaa.png\";","export default __webpack_public_path__ + \"static/media/nbmon1.afd72481.png\";","export default __webpack_public_path__ + \"static/media/nbmon2.881ab336.png\";","\nimport { useEffect, useState } from \"react\";\nimport PriceGetter from \"../contracts/PriceGetter.json\";\nimport NBMonCore from \"../contracts/NBMonCore.json\"\nimport { useMoralis, useNativeBalance } from \"react-moralis\";\nimport NBMon1 from \"../nbmon1.png\";\nimport NBMon2 from \"../nbmon2.png\";\nimport NBMon3 from \"../nbmon3.png\";\n\n\nconst TOKEN_CONTRACT_ADDRESS = \"0x36B29994Df52Eb7A58D78F53E274963f24887EfB\";\nconst PRICEGETTER_CONTRACT_ADDRESS = \"0xf21F90585fD99281cefdfdb5A3307082FE62E2B7\";\n\nexport const Marketplace = () : React.ReactElement => {\n  const { Moralis, isAuthenticated, authenticate, logout } = useMoralis();\n\n  const[bscBalance, setBscBalance] = useState();\n  const[bscToUsdBalance, setBscToUsdBalance] = useState();\n\n  const[nftName, setNftName] = useState(\"\");\n  const[nftDescription, setNftDescription] = useState(\"\");\n\n  const[healthPar, setHealth] = useState(0);\n  const[attackPar, setAttack] = useState(0);\n  const[staminaPar, setStamina] = useState(0);\n\n  const[selectedImg, setSelectedImg] = useState(\"Emily\");\n\n  const [NBMons, setNBMons] = useState([]);\n  \n  const displayNBMons = async () => {\n    setNBMons([]);\n    const abi = NBMonCore.abi;\n    const web3 = await Moralis.Web3.enableWeb3();\n    const contract = new web3.eth.Contract(abi, TOKEN_CONTRACT_ADDRESS);\n    const dataArray = await contract.methods.getOwnerNBMonIds(web3.currentProvider.selectedAddress).call({from: web3.currentProvider.selectedAddress});\n    \n    console.log(dataArray);\n    //for(const dogId of dataArray) {\n    dataArray.forEach(async (dogId) => {\n      const d = await contract.methods.getNBMon(dogId).call({from: web3.currentProvider.selectedAddress});\n      const nftTokenURI = d.tokenURI;\n      const response = await fetch(nftTokenURI);\n      const jsonResponse = await response.json();\n      console.log(jsonResponse);\n\n      const nftImageURI = jsonResponse.image;\n      console.log(dogId);\n\n      const element = (<div key={dogId} className=\"col-md-4\">\n      <div className=\"card nbmon-card\">\n      <img src={nftImageURI}></img>\n      <div className=\"nbmonname\">{jsonResponse.name}</div> <br/>\n      Description: {jsonResponse.description} <br/>\n      Health: {d.health} <br/>\n      Stamina: {d.stamina} <br/>\n      Attack: {d.attack} <br/>\n      </div>\n      </div>);\n      setNBMons(oldArray => [...oldArray, element]);\n      console.log(d);\n    }); \n\n  };\n\n  const convertImageToBase64 = async (urlImg) => {\n    var img = new Image();\n    img.src = urlImg;\n    await img.decode();\n    \n    var canvas = document.createElement('canvas'),\n      ctx = canvas.getContext('2d');\n    \n    canvas.height = img.naturalHeight;\n    canvas.width = img.naturalWidth;\n    ctx.drawImage(img, 0, 0);\n    \n    var b64 = canvas.toDataURL('image/png');\n    return b64;\n    };\n\n  const mintNBMon = async () => {\n    /*\n    let nbmonimage = \"\";\n    if(selectedImg == \"Emily\"){\n      nbmonimage = await convertImageToBase64(NBMon1);\n    }\n    else if(selectedImg == \"Bobby\"){\n      nbmonimage = await convertImageToBase64(NBMon2);\n    }\n    else if(selectedImg == \"James\"){\n      nbmonimage = await convertImageToBase64(NBMon3);\n    }\n    console.log(nbmonimage);\n    const file = new Moralis.File(\"image.png\", {base64 : nbmonimage});\n    await file.saveIPFS();\n\n    const imageURL = file.ipfs()\n    \n    const metadata = {\n      \"name\": nftName,\n      \"description\": nftDescription,\n      \"image\": imageURL\n    };\n\n    const metadataFile = new Moralis.File(\"metadata.json\", {base64: btoa(JSON.stringify(metadata))});\n    await metadataFile.saveIPFS();\n\n    const metaURL = metadataFile.ipfs();\n\n    console.log(metaURL);\n    */\n\n    const abi = NBMonCore.abi;\n\n    const encodedAbiUploadFile = btoa(JSON.stringify(abi))\n    const AbiFile = new Moralis.File(\"NBMonCore.json\", { base64: encodedAbiUploadFile })\n    const contractAbis = new Moralis.Object(\"contractAbis\");\n    contractAbis.set(\"AbiFile\", AbiFile);\n    contractAbis.set(\"Filename\", \"NBMonCore\");\n    contractAbis.save();\n    const web3 = await Moralis.Web3.enableWeb3();\n    const contract = new web3.eth.Contract(abi, TOKEN_CONTRACT_ADDRESS);\n    /*\n    const totalPrice = 220;\n    \n    const _finalAttack = attackPar;\n    const _finalHealth = healthPar;\n    const _finalStamina = staminaPar;\n    const _finalURI = metaURL;\n    const _finalPrice = web3.utils.toBN(totalPrice * 100000000000);\n\n    console.log(_finalPrice);\n    console.log(\"FINAL PRICE\");*/\n\n    /*const receipt = await contract.methods.mintExternal(_finalAttack,\n      _finalHealth,\n      _finalStamina,\n      _finalURI,\n      _finalPrice).send({from: web3.currentProvider.selectedAddress, value: _finalPrice});\n    */ \n    const receipt = await contract.methods.mintNBMon(\"0x619DB0c27484167f18DE31a7756F5F23eEcc5Ca8\").send({from: web3.currentProvider.selectedAddress});\n    console.log(receipt);\n\n\n    const dataArray = await contract.methods.getOwnerNBMonIds(web3.currentProvider.selectedAddress).call({from: web3.currentProvider.selectedAddress});\n    \n    console.log(dataArray);\n    //for(const dogId of dataArray) {\n    dataArray.forEach(async (NBMonId) => {\n      const d = await contract.methods.getNBMon(NBMonId).call({from: web3.currentProvider.selectedAddress});\n      //const nftTokenURI = d.tokenURI;\n      //const response = await fetch(nftTokenURI);\n      //const jsonResponse = await response.json();\n      //console.log(jsonResponse);\n      //setNBMons(oldArray => [...oldArray, element]);\n      console.log(d);\n    }); \n\n    getBSCbalance();\n    //displayNBMons();\n\n    \n  };\n\n  const getBSCbalance = async () => {\n    const web3 = await Moralis.enableWeb3();\n    const abi = PriceGetter.abi\n    const contract = new web3.eth.Contract(abi, PRICEGETTER_CONTRACT_ADDRESS);\n    const BscToUsdData = await contract.methods.getLatestPrice().call() / 100000000;\n    console.log(BscToUsdData);\n\n    const balance = await web3.eth.getBalance(web3.currentProvider.selectedAddress);\n    const balanceDeci = web3.utils.fromWei(balance);\n    console.log(balanceDeci);\n\n    setBscBalance(balanceDeci);\n    setBscToUsdBalance(balanceDeci * BscToUsdData);\n  };\n\n  useEffect(() => {\n    if(isAuthenticated){\n    getBSCbalance();\n    displayNBMons();\n    }\n  console.log(\"USEFE\");\n  }, [isAuthenticated]);\n\n    return (\n      <div className=\"marketplace\">\n        <div className=\"container\">\n    {!isAuthenticated ? \n    <button onClick={() => authenticate()}> Authenticate </button>\n    \n     : <div>\n       <button onClick={() => logout()}>Log Out</button><br/>\n     Current Balance: {bscBalance} BNB ({bscToUsdBalance} USD) <br/>\n     <button onClick={mintNBMon}>Mint!</button> \n     <div className=\"row\">{NBMons}</div>\n     </div>}\n    </div>  \n      </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/nbmon-background.35ccc918.png\";","\nimport { useEffect, useState } from \"react\";\nimport PriceGetter from \"../contracts/PriceGetter.json\";\nimport NBMonCore from \"../contracts/NBMonCore.json\"\nimport { Marketplace } from \"../components\"\n\nimport { useMoralis, useNativeBalance } from \"react-moralis\";\nimport NBMon1 from \"../nbmon1.png\";\nimport NBMon2 from \"../nbmon2.png\";\nimport NBMon3 from \"../nbmon3.png\";\nimport NBBackground from \"../nbmon-background.png\"\nimport { Route, Routes } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst TOKEN_CONTRACT_ADDRESS = \"0x36B29994Df52Eb7A58D78F53E274963f24887EfB\";\nconst PRICEGETTER_CONTRACT_ADDRESS = \"0xf21F90585fD99281cefdfdb5A3307082FE62E2B7\";\n\t\n\nexport const Gallery = ({ match }) : React.ReactElement => {\n\n\tconst { Moralis, isAuthenticated, authenticate, logout } = useMoralis();\n\n\tconst[bscBalance, setBscBalance] = useState();\n\tconst[bscToUsdBalance, setBscToUsdBalance] = useState();\n\n\tconst[nftName, setNftName] = useState(\"\");\n\tconst[nftDescription, setNftDescription] = useState(\"\");\n\n\tconst[healthPar, setHealth] = useState(0);\n\tconst[attackPar, setAttack] = useState(0);\n\tconst[staminaPar, setStamina] = useState(0);\n\n\tconst[selectedImg, setSelectedImg] = useState(\"Emily\");\n\n\tconst [NBMons, setNBMons] = useState([]);\n\t\n\tconst displayNBMons = async () => {\n\t\tsetNBMons([]);\n\t\tconst abi = NBMonCore.abi;\n\t\tconst web3 = await Moralis.Web3.enableWeb3();\n\t\tconst contract = new web3.eth.Contract(abi, TOKEN_CONTRACT_ADDRESS);\n\t\tconst dataArray = await contract.methods.getOwnerNBMonIds(web3.currentProvider.selectedAddress).call({from: web3.currentProvider.selectedAddress});\n\t\t\n\t\tconsole.log(dataArray);\n\t\t//for(const dogId of dataArray) {\n\t\tdataArray.forEach(async (NBMonId) => {\n\t\t\tconst d = await contract.methods.getNBMon(NBMonId).call({from: web3.currentProvider.selectedAddress});\n\t\t\tconsole.log(d);\n\t\t\t/*\n\t\t\tconst nftTokenURI = d.tokenURI;\n\t\t\tconst response = await fetch(nftTokenURI);\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tconsole.log(jsonResponse);\n\n\t\t\tconst nftImageURI = jsonResponse.image;\n\t\t\tconsole.log(dogId);\n\t\t\t*/\n\n\t\t\tconst element = (<div key={NBMonId} className=\"col-md-4\">\n\n\t\t\t<a className=\"nb-link\" href={\"/item/\"+NBMonId.toString()}><div className=\"card nb-card\">\n\t\t\t<div className=\"nb-image\">\n\t\t\t<img src={NBBackground} className=\"nbmon-background\"></img>\n\t\t\t<img src={NBMon3}></img>\n\t\t\t\n\t\t\t</div>\n\t\t\t<div className=\"nb-inside-card\">\n\t\t\t<div className=\"nbmonname\">Some Name</div> \n\t\t\t<p className=\"card-icons\"><i className=\"fas fa-heart\"></i>{d.combinationStats.substring(0,2)} \n\t\t\t<i className=\"fas fa-khanda\"></i>{d.combinationStats.substring(2,4)}  \n\t\t\t<i className=\"fas fa-shield-alt\"></i>{d.combinationStats.substring(4,6)} </p> \n\t\t\t<div className=\"nb-price\"><b>7777.777</b> <i>nbcoin</i> <br/> <i>777.77 usd</i></div>\n\t\t\t<span className=\"nb-description\">Some Description</span> \n\t\t\t\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</a>\n\t\t\t</div>);\n\t\t\tsetNBMons(oldArray => [...oldArray, element]);\n\t\t\tconsole.log(d);\n\t\t\t\n\t\t}); \n\n\t};\n\n\tconst convertImageToBase64 = async (urlImg) => {\n\t\tvar img = new Image();\n\t\timg.src = urlImg;\n\t\tawait img.decode();\n\t  \n\t\tvar canvas = document.createElement('canvas'),\n\t\t  ctx = canvas.getContext('2d');\n\t  \n\t\tcanvas.height = img.naturalHeight;\n\t\tcanvas.width = img.naturalWidth;\n\t\tctx.drawImage(img, 0, 0);\n\t  \n\t\tvar b64 = canvas.toDataURL('image/png');\n\t\treturn b64;\n\t  };\n\n\tconst mintNBMon = async () => {\n\t\tlet nbmonimage = \"\";\n\t\tif(selectedImg == \"Emily\"){\n\t\t\tnbmonimage = await convertImageToBase64(NBMon1);\n\t\t}\n\t\telse if(selectedImg == \"Bobby\"){\n\t\t\tnbmonimage = await convertImageToBase64(NBMon2);\n\t\t}\n\t\telse if(selectedImg == \"James\"){\n\t\t\tnbmonimage = await convertImageToBase64(NBMon3);\n\t\t}\n\t\tconsole.log(nbmonimage);\n\t\tconst file = new Moralis.File(\"image.png\", {base64 : nbmonimage});\n\t\tawait file.saveIPFS();\n\n\t\tconst imageURL = file.ipfs()\n\t\t\n\t\tconst metadata = {\n\t\t\t\"name\": nftName,\n\t\t\t\"description\": nftDescription,\n\t\t\t\"image\": imageURL\n\t\t};\n\n\t\tconst metadataFile = new Moralis.File(\"metadata.json\", {base64: btoa(JSON.stringify(metadata))});\n\t\tawait metadataFile.saveIPFS();\n\n\t\tconst metaURL = metadataFile.ipfs();\n\n\t\tconsole.log(metaURL);\n\n\t\tconst abi = NBMonCore.abi;\n\t\tconst web3 = await Moralis.Web3.enableWeb3();\n\t\tconst contract = new web3.eth.Contract(abi, TOKEN_CONTRACT_ADDRESS);\n\n\t\tconst totalPrice = 220;\n\n\t\tconst _finalAttack = attackPar;\n\t\tconst _finalHealth = healthPar;\n\t\tconst _finalStamina = staminaPar;\n\t\tconst _finalURI = metaURL;\n\t\tconst _finalPrice = web3.utils.toBN(totalPrice * 100000000000);\n\n\t\tconsole.log(_finalPrice);\n\t\tconsole.log(\"FINAL PRICE\");\n\n\t\tconst receipt = await contract.methods.mintExternal(_finalAttack,\n\t\t\t_finalHealth,\n\t\t\t_finalStamina,\n\t\t\t_finalURI,\n\t\t\t_finalPrice).send({from: web3.currentProvider.selectedAddress, value: _finalPrice});\n\t\tconsole.log(receipt);\n\n\t\tgetBSCbalance();\n\t\tdisplayNBMons();\n\n\t\t\n\t};\n\n\tconst getBSCbalance = async () => {\n\t\tconst web3 = await Moralis.enableWeb3();\n\t\tconst abi = PriceGetter.abi\n\t\tconst contract = new web3.eth.Contract(abi, PRICEGETTER_CONTRACT_ADDRESS);\n\t\tconst BscToUsdData = await contract.methods.getLatestPrice().call() / 100000000;\n\t\tconsole.log(BscToUsdData);\n\n\t\tconst balance = await web3.eth.getBalance(web3.currentProvider.selectedAddress);\n\t\tconst balanceDeci = web3.utils.fromWei(balance);\n\t\tconsole.log(balanceDeci);\n\n\t\tsetBscBalance(balanceDeci);\n\t\tsetBscToUsdBalance(balanceDeci * BscToUsdData);\n\t};\n\n  useEffect(() => {\n\t  if(isAuthenticated){\n\t\tgetBSCbalance();\n\t\tdisplayNBMons();\n\t  }\n\tconsole.log(\"USEFE\");\n\t}, [isAuthenticated]);\n  return (\n\t\t<div className=\"container\">\n\t\t\n\t\t <div className=\"row\">\n\t\t <div className=\"col-3\">\n\t\t \t<div className=\"card\">\n\t<article className=\"card-group-item\">\n\t\t<header className=\"card-header\">\n\t\t\t<h6 className=\"title\">Type </h6>\n\t\t</header>\n\t\t<div className=\"filter-content\">\n\t\t\t<div className=\"card-body\">\n\t\t\t<button className=\"filter-clear\">Clear all</button>\n\t\t\t<form>\n\t\t\t\t<label className=\"form-check\">\n\t\t\t\t  <input className=\"form-check-input\" type=\"checkbox\" value=\"\" />\n\t\t\t\t  <span className=\"form-check-label\">\n\t\t\t\t    Common\n\t\t\t\t  </span>\n\t\t\t\t</label>\n\t\t\t\t<label className=\"form-check\">\n\t\t\t\t  <input className=\"form-check-input\" type=\"checkbox\" value=\"\" />\n\t\t\t\t  <span className=\"form-check-label\">\n\t\t\t\t    Uncommon\n\t\t\t\t  </span>\n\t\t\t\t</label> \n\t\t\t\t<label className=\"form-check\">\n\t\t\t\t  <input className=\"form-check-input\" type=\"checkbox\" value=\"\" />\n\t\t\t\t  <span className=\"form-check-label\">\n\t\t\t\t    Rare\n\t\t\t\t  </span>\n\t\t\t\t</label>  \n\t\t\t\t<label className=\"form-check\">\n\t\t\t\t  <input className=\"form-check-input\" type=\"checkbox\" value=\"\" />\n\t\t\t\t  <span className=\"form-check-label\">\n\t\t\t\t    Very Rare\n\t\t\t\t  </span>\n\t\t\t\t</label>  \n\t\t\t\t<label className=\"form-check\">\n\t\t\t\t  <input className=\"form-check-input\" type=\"checkbox\" value=\"\" />\n\t\t\t\t  <span className=\"form-check-label\">\n\t\t\t\t    Legendary\n\t\t\t\t  </span>\n\t\t\t\t</label>  \n\t\t\t</form>\n\n\t\t\t</div> \n\t\t</div>\n\t</article> \n\t<article className=\"card-group-item\">\n\t\t<header className=\"card-header\">\n\t\t\t<h6 className=\"title\">Characteristics </h6>\n\t\t</header>\n\t\t<div className=\"filter-content\">\n\t\t\t<div className=\"card-body\">\n\t\t\t<button className=\"filter-clear\">Clear all</button>\n\t\t\t<form>\n\t\t\t\t<label className=\"form-range\">\n\t\t\t\t  <span className=\"form-range-label\">\n\t\t\t\t    HP\n\t\t\t\t  </span>\n\t\t\t\t  <input className=\"form-range-input\" type=\"range\" min=\"0\" max=\"20\"/>\n\t\t\t\t</label>\n\t\t\t\t<label className=\"form-range\">\n\t\t\t\t  <span className=\"form-range-label\">\n\t\t\t\t    Attack\n\t\t\t\t  </span>\n\t\t\t\t  <input className=\"form-range-input\" type=\"range\" min=\"0\" max=\"20\"/>\n\t\t\t\t</label> \n\t\t\t\t<label className=\"form-range\">\n\t\t\t\t  <span className=\"form-range-label\">\n\t\t\t\t    Defense\n\t\t\t\t  </span>\n\t\t\t\t  <input className=\"form-range-input\" type=\"range\" min=\"0\" max=\"20\"/>\n\t\t\t\t</label>  \n\t\t\t\t<label className=\"form-range\">\n\t\t\t\t  <span className=\"form-range-label\">\n\t\t\t\t    Attack Speed\n\t\t\t\t  </span>\n\t\t\t\t  <input className=\"form-range-input\" type=\"range\" min=\"0\" max=\"20\"/>\n\t\t\t\t</label>  \n\t\t\t\t<label className=\"form-range\">\n\t\t\t\t  <span className=\"form-range-label\">\n\t\t\t\t    Speed\n\t\t\t\t  </span>\n\t\t\t\t  <input className=\"form-range-input\" type=\"range\" min=\"0\" max=\"20\"/>\n\t\t\t\t</label>  \n\t\t\t</form>\n\n\t\t\t</div> \n\t\t</div>\n\t</article> \n\t\n\t<article className=\"card-group-item\">\n\t\t<header className=\"card-header\">\n\t\t\t<h6 className=\"title\">Breed</h6>\n\t\t</header>\n\t\t<div className=\"filter-content\">\n\t\t\t<div className=\"card-body\">\n\t\t\t<label className=\"form-check\">\n\t\t\t  <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadio\" value=\"\" />\n\t\t\t  <span className=\"form-check-label\">\n\t\t\t    Origin\n\t\t\t  </span>\n\t\t\t</label>\n\t\t\t<label className=\"form-check\">\n\t\t\t  <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadio\" value=\"\" />\n\t\t\t  <span className=\"form-check-label\">\n\t\t\t    Hybrid\n\t\t\t  </span>\n\t\t\t</label>\n\t\t\t<label className=\"form-check\">\n\t\t\t  <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadio\" value=\"\" />\n\t\t\t  <span className=\"form-check-label\">\n\t\t\t    Wild\n\t\t\t  </span>\n\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t</article> \n</div>\n\n\t\t </div>\n\t\t <div className=\"col-9 gallery-block\">\n\t\t <div className=\"sort-block\">\n\t\t \t<button>Sort</button>\n\t\t \t<button><i className=\"fas fa-th-large\"></i></button>\n\t\t \t<button><i className=\"fas fa-list\"></i></button>\n\t\t </div>\n\t\t <div className=\"row nb-gallery-showcase\">\n\t\t {NBMons}\n\t\t </div>\n\t\t </div>\n\t\t </div>\n\n\t\t</div>\n\t  );\n}","export default __webpack_public_path__ + \"static/media/realmhunterlogo.7c6abd9c.png\";","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport NBMonCore from \"./contracts/NBMonCore.json\"\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Marketplace, Navigation, Gallery} from \"./components\";\n\n\n\nimport \"./App.css\"\nimport RealmHunter from \"./realmhunterlogo.png\"\nimport { useMoralis } from \"react-moralis\"\n\n\nconst TOKEN_CONTRACT_ADDRESS = \"0x36B29994Df52Eb7A58D78F53E274963f24887EfB\";\n\n\nfunction App () {\n\tconst { Moralis, isAuthenticated, authenticate, logout } = useMoralis();\n/*\n\tconst [NBMonsRouted, setNBMons] = useState([]);\n\n\tconst displayNBMons = async () => {\n\t\tsetNBMons([]);\n\t\tconst abi = NBMonCore.abi;\n\t\tconst web3 = await Moralis.Web3.enableWeb3();\n\t\tconst contract = new web3.eth.Contract(abi, TOKEN_CONTRACT_ADDRESS);\n\t\tconst dataArray = await contract.methods.getOwnerNBMonIds(web3.currentProvider.selectedAddress).call({from: web3.currentProvider.selectedAddress});\n\t\t\n\t\tconsole.log(dataArray);\n\t\t//for(const dogId of dataArray) {\n\t\tdataArray.forEach(async (dogId) => {\n\t\t\tconst d = await contract.methods.getNBMons(dogId).call({from: web3.currentProvider.selectedAddress});\n\t\t\tconst nftTokenURI = d.tokenURI;\n\t\t\tconst response = await fetch(nftTokenURI);\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tconsole.log(jsonResponse);\n\n\t\t\tconst nftImageURI = jsonResponse.image;\n\t\t\tconsole.log(dogId);\n\n\t\t\tconst element = (\n\t\t\t<Route path={\"/item/\"+dogId} element={\n\t\t\t<div className=\"row row-solo\">\n\t\t\t<div className=\"col-md-4\">\n\t\t\t<a href=\"/\" className=\"back-marketplace-button\">\n\t\t\t\n\t\t\t<i className=\"fas fa-arrow-left\"> </i> Go back to the Marketplace</a></div>\n\t\t\t<div key={dogId} className=\"col-md-4\">\n\t\t\t<div className=\"solo-nb\">\n\t\t\t\t\t\t\t\n\t\t\t<a className=\"nb-link\" href={\"/item/\"+dogId.toString()}><div className=\"card nb-card\">\n\t\t\t<img src={nftImageURI}></img>\n\t\t\t<div className=\"nbmonname\">{jsonResponse.name}</div> <br/>\n\t\t\t<span className=\"nb-description\">{jsonResponse.description}</span> <br/>\n\t\t\t<p className=\"card-icons\"><i className=\"fas fa-heart\"></i>{d.health} \n\t\t\t<i className=\"fas fa-khanda\"></i>{d.stamina}  \n\t\t\t<i className=\"fas fa-shield-alt\"></i>{d.attack} </p> \n\t\t\t</div></a></div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t} />\n\t\t\t);\n\t\t\tsetNBMons(oldArray => [...oldArray, element]);\n\t\t\tconsole.log(element);\n\t\t}); \n\n\t};\n\n\tuseEffect(() => {\n\t  if(isAuthenticated){\n\t\tdisplayNBMons();\n\t  }\n\tconsole.log(\"USEFE\");\n\t}, [isAuthenticated]);\n*/\n    return(\n      <BrowserRouter>\n      <div className=\"realmhunter-logo\">\n      \t<a href=\"/\"><img src={RealmHunter} /></a>\n      </div>\n\n        <Navigation />\n        <Routes>\n          <Route path=\"/\" element={<Gallery />} />\n          <Route path=\"/marketplace\" element={<Marketplace />} />\n\n          \n          <Route path=\"/item/404\" element={<div>gosdk</div>} />\n          \n        </Routes>\n      </BrowserRouter>\n      );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport { MoralisProvider } from \"react-moralis\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider appId=\"GbAscQluHiFRPQCpBrxtcetRZbmTnMm58Im9rzlr\" serverUrl=\"https://zjgu58ilpvwz.usemoralis.com:2053/server\">\n      <App />\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}